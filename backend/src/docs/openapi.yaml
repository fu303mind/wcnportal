openapi: 3.0.3
info:
  title: Secure Client Portal API
  version: 1.0.0
  description: |
    OpenAPI specification for the Secure Client Portal REST API. All requests must be performed over HTTPS.
servers:
  - url: https://api.example.com
    description: Production
  - url: http://localhost:5000
    description: Development
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [admin, client, manager, staff]
        isEmailVerified:
          type: boolean
        mfaEnabled:
          type: boolean
      required: [id, email, firstName, lastName, role]
    Workflow:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [draft, in_progress, completed, archived]
        progress:
          type: integer
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      required: [id, title, status, progress]
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [todo, in_progress, completed, blocked]
        dueDate:
          type: string
          format: date-time
    Notification:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        message:
          type: string
        type:
          type: string
          enum: [info, success, warning, error]
        read:
          type: boolean
paths:
  /api/auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, firstName, lastName]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                role:
                  type: string
                  enum: [admin, client, manager, staff]
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '409':
          description: Email already used
  /api/auth/login:
    post:
      tags: [Auth]
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
                mfaCode:
                  type: string
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
  /api/auth/logout:
    post:
      tags: [Auth]
      summary: Logout current session
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Logged out
  /api/users/me:
    get:
      tags: [Users]
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
    patch:
      tags: [Users]
      summary: Update current user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '200':
          description: Profile updated
  /api/workflows:
    get:
      tags: [Workflows]
      summary: List workflows
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: Paged workflows
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workflow'
    post:
      tags: [Workflows]
      summary: Create workflow
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, clientAccount]
              properties:
                title:
                  type: string
                description:
                  type: string
                clientAccount:
                  type: string
      responses:
        '201':
          description: Workflow created
  /api/documents:
    get:
      tags: [Documents]
      summary: List documents belonging to current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Documents found
    post:
      tags: [Documents]
      summary: Upload new document
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Document uploaded
  /api/notifications:
    get:
      tags: [Notifications]
      summary: Get notifications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notification list
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
  /api/search:
    get:
      tags: [Search]
      summary: Full-text search across resources
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: q
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Search results
security:
  - bearerAuth: []
